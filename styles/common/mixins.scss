@use "../theme.scss";
@use "../variable.scss";

@mixin unset() {
  outline: none;
  border: none;
  box-shadow: none;
}

@mixin slider(
  $radius: variable.$radius,
  $highlight-color: white,
  $length: 145px,
  $slider-color: theme.$background-dark
) {
  slider {
    min-height: 8px;
    border-radius: $radius;
    background: transparent;
    border: none;
    box-shadow: 0 0 3px 0 theme.$shadow-color;
  }

  scale {
    min-width: $length;
  }

  trough {
    min-height: inherit;
    border-radius: $radius;
    border: none;
    background: $slider-color;
  }

  highlight,
  progress {
    background: $highlight-color;
    border-radius: $radius;
  }
}

@mixin floating-widget {
  box-shadow: 0 0 1px 0 theme.$shadow-color;
  margin: max(variable.$spacing, 8px);
  border: variable.$border-width solid variable.$popover-border-color;
  background-color: theme.$background-dark;
  color: theme.$text-main;
  border-radius: variable.$popover-radius;
  padding: variable.$popover-padding;
}

@mixin switch {
  slider {
    background-color: theme.$background-dark;
    border-radius: 100px;
    min-width: 24px;
    min-height: 24px;
  }

  image {
    color: transparent;
  }
}

@mixin widget {
  transition: 200ms;
  border-radius: variable.$radius;
  color: theme.$text-main;
  background-color: theme.$background-alt;
  border: variable.$border;
}

@mixin spacing($multiplier: 1, $spacing: variable.$spacing, $rec: false) {
  &.horizontal > * {
    margin: 0 calc($spacing * $multiplier / 2);

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }

  &.vertical > * {
    margin: calc($spacing * $multiplier / 2) 0;

    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  @if $rec {
    box {
      &.horizontal > * {
        margin: 0 $spacing * $multiplier / 2;

        &:first-child {
          margin-left: 0;
        }

        &:last-child {
          margin-right: 0;
        }
      }

      &.vertical > * {
        margin: $spacing * $multiplier / 2 0;

        &:first-child {
          margin-top: 0;
        }

        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }
}
